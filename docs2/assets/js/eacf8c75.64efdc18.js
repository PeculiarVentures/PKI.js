"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5154],{81129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>m,toc:()=>c});var a=t(85893),s=t(11151);const r={id:"TimeStampReq",title:"Class: TimeStampReq",sidebar_label:"TimeStampReq",sidebar_position:0,custom_edit_url:null},i=void 0,m={id:"api/classes/TimeStampReq",title:"Class: TimeStampReq",description:"Represents the TimeStampReq structure described in RFC3161",source:"@site/docs/api/classes/TimeStampReq.md",sourceDirName:"api/classes",slug:"/api/classes/TimeStampReq",permalink:"/docs2/docs/api/classes/TimeStampReq",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"TimeStampReq",title:"Class: TimeStampReq",sidebar_label:"TimeStampReq",sidebar_position:0,custom_edit_url:null},sidebar:"docs",previous:{title:"Time",permalink:"/docs2/docs/api/classes/Time"},next:{title:"TimeStampResp",permalink:"/docs2/docs/api/classes/TimeStampResp"}},o={},c=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Represents the TimeStampReq structure described in ",(0,a.jsx)(n.a,{href:"https://www.ietf.org/rfc/rfc3161.txt",children:"RFC3161"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"Example"})})}),"\n",(0,a.jsx)(n.p,{children:"The following example demonstrates how to create Time-Stamp Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'const nonce = pkijs.getRandomValues(new Uint8Array(10)).buffer;\n\nconst tspReq = new pkijs.TimeStampReq({\n  version: 1,\n  messageImprint: await pkijs.MessageImprint.create("SHA-256", message),\n  reqPolicy: "1.2.3.4.5.6",\n  certReq: true,\n  nonce: new asn1js.Integer({ valueHex: nonce }),\n});\n\nconst tspReqRaw = tspReq.toSchema().toBER();\n\n## Hierarchy\n\n- [`PkiObject`](PkiObject.md)\n\n  \u21b3 **`TimeStampReq`**\n\n## Implements\n\n- [`ITimeStampReq`](../interfaces/ITimeStampReq.md)\n\n## Constructors\n\n### constructor\n\n\u2022 **new TimeStampReq**(`parameters?`): [`TimeStampReq`](TimeStampReq.md)\n\nInitializes a new instance of the [TimeStampReq](TimeStampReq.md) class\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `parameters` | [`TimeStampReqParameters`](../modules.md#timestampreqparameters) | Initialization parameters |\n\n#### Returns\n\n[`TimeStampReq`](TimeStampReq.md)\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[constructor](PkiObject.md#constructor)\n\n## Properties\n\n### certReq\n\n\u2022 `Optional` **certReq**: `boolean`\n\nIf the certReq field is present and set to true, the TSA\'s public key\ncertificate that is referenced by the ESSCertID identifier inside a\nSigningCertificate attribute in the response MUST be provided by the\nTSA in the certificates field from the SignedData structure in that\nresponse. That field may also contain other certificates.\n\nIf the certReq field is missing or if the certReq field is present\nand set to false then the certificates field from the SignedData\nstructure MUST not be present in the response.\n\n#### Implementation of\n\n[ITimeStampReq](../interfaces/ITimeStampReq.md).[certReq](../interfaces/ITimeStampReq.md#certreq)\n\n___\n\n### extensions\n\n\u2022 `Optional` **extensions**: [`Extension`](Extension.md)[]\n\nThe extensions field is a generic way to add additional information\nto the request in the future.\n\n#### Implementation of\n\n[ITimeStampReq](../interfaces/ITimeStampReq.md).[extensions](../interfaces/ITimeStampReq.md#extensions)\n\n___\n\n### messageImprint\n\n\u2022 **messageImprint**: [`MessageImprint`](MessageImprint.md)\n\nContains the hash of the datum to be time-stamped\n\n#### Implementation of\n\n[ITimeStampReq](../interfaces/ITimeStampReq.md).[messageImprint](../interfaces/ITimeStampReq.md#messageimprint)\n\n___\n\n### nonce\n\n\u2022 `Optional` **nonce**: `Integer`\n\nThe nonce, if included, allows the client to verify the timeliness of\nthe response when no local clock is available. The nonce is a large\nrandom number with a high probability that the client generates it\nonly once.\n\n#### Implementation of\n\n[ITimeStampReq](../interfaces/ITimeStampReq.md).[nonce](../interfaces/ITimeStampReq.md#nonce)\n\n___\n\n### reqPolicy\n\n\u2022 `Optional` **reqPolicy**: `string`\n\nIndicates the TSA policy under which the TimeStampToken SHOULD be provided.\n\n#### Implementation of\n\n[ITimeStampReq](../interfaces/ITimeStampReq.md).[reqPolicy](../interfaces/ITimeStampReq.md#reqpolicy)\n\n___\n\n### version\n\n\u2022 **version**: `number`\n\nVersion of the Time-Stamp request. Should be version 1.\n\n#### Implementation of\n\n[ITimeStampReq](../interfaces/ITimeStampReq.md).[version](../interfaces/ITimeStampReq.md#version)\n\n___\n\n### CLASS\\_NAME\n\n\u25aa `Static` **CLASS\\_NAME**: `string` = `"TimeStampReq"`\n\nName of the class\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[CLASS_NAME](PkiObject.md#class_name)\n\n## Accessors\n\n### className\n\n\u2022 `get` **className**(): `string`\n\n#### Returns\n\n`string`\n\n#### Inherited from\n\nPkiObject.className\n\n## Methods\n\n### fromSchema\n\n\u25b8 **fromSchema**(`schema`): `void`\n\nConverts parsed ASN.1 object into current class\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `schema` | `any` | ASN.1 schema |\n\n#### Returns\n\n`void`\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[fromSchema](PkiObject.md#fromschema)\n\n___\n\n### toJSON\n\n\u25b8 **toJSON**(): [`TimeStampReqJson`](../interfaces/TimeStampReqJson.md)\n\nConverts the class to JSON object\n\n#### Returns\n\n[`TimeStampReqJson`](../interfaces/TimeStampReqJson.md)\n\nJSON object\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[toJSON](PkiObject.md#tojson)\n\n___\n\n### toSchema\n\n\u25b8 **toSchema**(): `Sequence`\n\nConverts current object to ASN.1 object and sets correct values\n\n#### Returns\n\n`Sequence`\n\nASN.1 object\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[toSchema](PkiObject.md#toschema)\n\n___\n\n### toString\n\n\u25b8 **toString**(`encoding?`): `string`\n\n#### Parameters\n\n| Name | Type | Default value |\n| :------ | :------ | :------ |\n| `encoding` | ``"base64"`` \\| ``"base64url"`` \\| ``"hex"`` | `"hex"` |\n\n#### Returns\n\n`string`\n\n#### Inherited from\n\n[PkiObject](PkiObject.md).[toString](PkiObject.md#tostring)\n\n___\n\n### blockName\n\n\u25b8 **blockName**(): `string`\n\nReturns block name\n\n#### Returns\n\n`string`\n\nReturns string block name\n\n#### Inherited from\n\n[PkiObject](PkiObject.md).[blockName](PkiObject.md#blockname)\n\n___\n\n### compareWithDefault\n\n\u25b8 **compareWithDefault**(`memberName`, `memberValue`): `boolean`\n\nCompare values with default values for all class members\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `memberName` | `string` | String name for a class member |\n| `memberValue` | `any` | Value to compare with default value |\n\n#### Returns\n\n`boolean`\n\n___\n\n### defaultValues\n\n\u25b8 **defaultValues**(`memberName`): `number`\n\nReturns default values for all class members\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `memberName` | ``"version"`` | String name for a class member |\n\n#### Returns\n\n`number`\n\nDefault value\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[defaultValues](PkiObject.md#defaultvalues)\n\n\u25b8 **defaultValues**(`memberName`): [`MessageImprint`](MessageImprint.md)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `memberName` | ``"messageImprint"`` |\n\n#### Returns\n\n[`MessageImprint`](MessageImprint.md)\n\n#### Overrides\n\nPkiObject.defaultValues\n\n\u25b8 **defaultValues**(`memberName`): `string`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `memberName` | ``"reqPolicy"`` |\n\n#### Returns\n\n`string`\n\n#### Overrides\n\nPkiObject.defaultValues\n\n\u25b8 **defaultValues**(`memberName`): `Integer`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `memberName` | ``"nonce"`` |\n\n#### Returns\n\n`Integer`\n\n#### Overrides\n\nPkiObject.defaultValues\n\n\u25b8 **defaultValues**(`memberName`): `boolean`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `memberName` | ``"certReq"`` |\n\n#### Returns\n\n`boolean`\n\n#### Overrides\n\nPkiObject.defaultValues\n\n\u25b8 **defaultValues**(`memberName`): [`Extension`](Extension.md)[]\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `memberName` | ``"extensions"`` |\n\n#### Returns\n\n[`Extension`](Extension.md)[]\n\n#### Overrides\n\nPkiObject.defaultValues\n\n___\n\n### fromBER\n\n\u25b8 **fromBER**\\<`T`\\>(`this`, `raw`): `T`\n\nCreates PKI object from the raw data\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | extends [`PkiObject`](PkiObject.md) |\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `this` | `PkiObjectConstructor`\\<`T`\\> | - |\n| `raw` | `BufferSource` | ASN.1 encoded raw data |\n\n#### Returns\n\n`T`\n\nInitialized and filled current class object\n\n#### Inherited from\n\n[PkiObject](PkiObject.md).[fromBER](PkiObject.md#fromber)\n\n___\n\n### schema\n\n\u25b8 **schema**(`parameters?`): `any`\n\nReturns value of pre-defined ASN.1 schema for current class\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `parameters` | [`SchemaParameters`](../interfaces/SchemaParameters.md)\\<\\{ `certReq?`: `string` ; `extensions?`: `string` ; `messageImprint?`: [`MessageImprintSchema`](../modules.md#messageimprintschema) ; `nonce?`: `string` ; `reqPolicy?`: `string` ; `version?`: `string`  }\\> | Input parameters for the schema |\n\n#### Returns\n\n`any`\n\nASN.1 schema object\n\n#### Overrides\n\n[PkiObject](PkiObject.md).[schema](PkiObject.md#schema)\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>m,a:()=>i});var a=t(67294);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);