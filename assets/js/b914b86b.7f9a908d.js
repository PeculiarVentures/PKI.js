"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2789],{14954:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>p,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"examples/timestamping/creating-a-timestamp-request","title":"Creating a Timestamp request","description":"In this example, you will see how to create and parse a  timestamp request.","source":"@site/docs/examples/timestamping/creating-a-timestamp-request.mdx","sourceDirName":"examples/timestamping","slug":"/examples/timestamping/creating-a-timestamp-request","permalink":"/docs/examples/timestamping/creating-a-timestamp-request","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"examples","previous":{"title":"Timestamping","permalink":"/docs/examples/timestamping/"},"next":{"title":"Creating a Timestamp response","permalink":"/docs/examples/timestamping/creating-a-timestamp-response"}}');var n=s(74848),i=s(28453),r=s(58069);const m="import * as pkijs from 'pkijs';\nimport * as asn1js from 'asn1js';\n\nconst nonce = pkijs.getRandomValues(new Uint8Array(10)).buffer;\n\nconst tspReq = new pkijs.TimeStampReq({\n  version: 1,\n  messageImprint: await pkijs.MessageImprint.create(\"SHA-256\", message),\n  reqPolicy: \"1.2.3.4.5.6\",\n  certReq: true,\n  nonce: new asn1js.Integer({ valueHex: nonce }),\n});\n\nconst tspReqRaw = tspReq.toSchema().toBER();\n",p={},o="Creating a Timestamp request",c={},l=[];function u(e){const t={h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"creating-a-timestamp-request",children:"Creating a Timestamp request"})}),"\n",(0,n.jsx)(t.p,{children:"In this example, you will see how to create and parse a  timestamp request."}),"\n",(0,n.jsx)(r.A,{language:"ts",children:m})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);