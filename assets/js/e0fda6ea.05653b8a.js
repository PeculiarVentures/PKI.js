"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7765],{85228:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>u,contentTitle:()=>c,default:()=>w,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=t(85893),r=t(11151),i=t(9286);const a="import * as pkijs from 'pkijs';\nimport * as asn1js from 'asn1js';\n\n// Create OCSP request\nconst ocspReq = new pkijs.OCSPRequest();\n\nocspReq.tbsRequest.requestorName = new pkijs.GeneralName({\n  type: 4,\n  value: cert.subject,\n});\n\nawait ocspReq.createForCertificate(cert, {\n  hashAlgorithm: \"SHA-256\",\n  issuerCertificate: issuerCert,\n});\n\nconst nonce = pkijs.getRandomValues(new Uint8Array(10));\nocspReq.tbsRequest.requestExtensions = [\n  new pkijs.Extension({\n    extnID: \"1.3.6.1.5.5.7.48.1.2\", // nonce\n    extnValue: new asn1js.OctetString({ valueHex: nonce.buffer }).toBER(),\n  })\n];\n\n// Encode OCSP request\nconst ocspReqRaw = ocspReq.toSchema(true).toBER();\n",o={},c="Working with OCSP requests",p={id:"examples/certificates-and-revocation/working-with-OCSP-requests",title:"Working with OCSP requests",description:"In this example, you will see how to create and parse OCSP requests.",source:"@site/docs/examples/certificates-and-revocation/working-with-OCSP-requests.mdx",sourceDirName:"examples/certificates-and-revocation",slug:"/examples/certificates-and-revocation/working-with-OCSP-requests",permalink:"/docs/examples/certificates-and-revocation/working-with-OCSP-requests",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"examples",previous:{title:"Creating and parsing CRLs",permalink:"/docs/examples/certificates-and-revocation/creating-and-parsing-CRLs"},next:{title:"Working with OCSP responses",permalink:"/docs/examples/certificates-and-revocation/working-with-OCSP-responses"}},u={},l=[];function d(e){const s={h1:"h1",p:"p",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"working-with-ocsp-requests",children:"Working with OCSP requests"}),"\n",(0,n.jsx)(s.p,{children:"In this example, you will see how to create and parse OCSP requests."}),"\n",(0,n.jsx)(i.Z,{language:"ts",children:a})]})}function w(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);