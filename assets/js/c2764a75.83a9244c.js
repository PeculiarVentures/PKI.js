"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[237],{68908:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>w});var t=n(85893),i=n(11151),r=n(9286);const o="import * as pkijs from 'pkijs';\nimport * as asn1js from 'asn1js';\n\nconst ocspBasicResp = new pkijs.BasicOCSPResponse();\n\n// Create specific TST info structure to sign\nocspBasicResp.tbsResponseData.responderID = issuerCert.subject;\nocspBasicResp.tbsResponseData.producedAt = new Date();\n\nconst certID = new pkijs.CertID();\nawait certID.createForCertificate(cert, {\n  hashAlgorithm: \"SHA-256\",\n  issuerCertificate: issuerCert,\n});\nconst response = new pkijs.SingleResponse({\n  certID,\n});\nresponse.certStatus = new asn1js.Primitive({\n  idBlock: {\n    tagClass: 3, // CONTEXT-SPECIFIC\n    tagNumber: 0 // [0]\n  },\n  lenBlockLength: 1 // The length contains one byte 0x00\n}); // status - success\nresponse.thisUpdate = new Date();\n\nocspBasicResp.tbsResponseData.responses.push(response);\n\n// Add certificates for chain OCSP response validation\nocspBasicResp.certs = [issuerCert];\n\nawait ocspBasicResp.sign(keys.privateKey, \"SHA-256\");\n\n// Finally create completed OCSP response structure\nconst ocspBasicRespRaw = ocspBasicResp.toSchema().toBER(false);\n\nconst ocspResp = new pkijs.OCSPResponse({\n  responseStatus: new asn1js.Enumerated({ value: 0 }), // success\n  responseBytes: new pkijs.ResponseBytes({\n    responseType: pkijs.id_PKIX_OCSP_Basic,\n    response: new asn1js.OctetString({ valueHex: ocspBasicRespRaw }),\n  }),\n});\n\nconst ocspRespRaw = ocspResp.toSchema().toBER();\n",a={},c="Working with OCSP responses",p={id:"examples/certificates-and-revocation/working-with-OCSP-responses",title:"Working with OCSP responses",description:"In this example, you will see how to create and parse OCSP responses.",source:"@site/docs/examples/certificates-and-revocation/working-with-OCSP-responses.mdx",sourceDirName:"examples/certificates-and-revocation",slug:"/examples/certificates-and-revocation/working-with-OCSP-responses",permalink:"/docs/examples/certificates-and-revocation/working-with-OCSP-responses",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"examples",previous:{title:"Working with OCSP requests",permalink:"/docs/examples/certificates-and-revocation/working-with-OCSP-requests"},next:{title:"Working with certificate requests",permalink:"/docs/examples/certificates-and-revocation/working-with-certificate-requests"}},l={},w=[];function u(e){const s={h1:"h1",p:"p",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"working-with-ocsp-responses",children:"Working with OCSP responses"}),"\n",(0,t.jsx)(s.p,{children:"In this example, you will see how to create and parse OCSP responses."}),"\n",(0,t.jsx)(r.Z,{language:"ts",children:o})]})}function d(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);